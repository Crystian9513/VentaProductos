/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vistas;

import Controladores.CategoriasJpaController;
import Controladores.ProductosJpaController;
import Controladores.ProveedoresJpaController;
import Controladores.exceptions.PreexistingEntityException;
import Modelo.Categorias;
import Modelo.Clientes;
import Modelo.ImagenFondo;
import Modelo.Productos;
import Modelo.Proveedores;
import com.formdev.flatlaf.intellijthemes.FlatArcOrangeIJTheme;
import java.awt.Image;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author APRENDIZ
 */
public class FormProductos extends javax.swing.JDialog {

    private ProductosJpaController pdc;
    ImagenFondo ejemplo = new ImagenFondo();

    /**
     * Creates new form FormProductos
     */
    public FormProductos(java.awt.Frame parent, boolean modal) {//1
        super(parent, modal);
        this.setContentPane(ejemplo);
        initComponents();
        this.setResizable(false);
        this.setModal(true);//Bloquea las interacciones
        this.setTitle("Productos");
        SetImagenLabel(img, "src/Imagen/productos.jpg");
        pdc = new ProductosJpaController();
        CargarTabla();
        llenarcomboboxproveedor();
        llenarcomboboxCategoria();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel10 = new javax.swing.JLabel();
        jPanel1 = new ImagenFondo();
        jLabel1 = new javax.swing.JLabel();
        txtcodigo = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtnombre = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox<String>();
        jComboBox2 = new javax.swing.JComboBox<String>();
        txtdescripcion = new javax.swing.JTextField();
        txtunidad = new javax.swing.JTextField();
        txtprecio = new javax.swing.JTextField();
        txtcantidad = new javax.swing.JTextField();
        jDate1 = new com.toedter.calendar.JDateChooser();
        img = new javax.swing.JLabel();
        guardar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        guardar1 = new javax.swing.JButton();
        guardar2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel10.setFont(new java.awt.Font("Lucida Fax", 1, 28)); // NOI18N
        jLabel10.setText("Compa√±ia S.A");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de Producto", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Codigo del Producto:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Nombre del Producto:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Categoria del Producto:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Proveedor del Producto:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Descripcion:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel6.setText("Unidad de Medida:");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setText("Precio Unitario:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setText("Cantidad de ingreso:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel9.setText("Fecha de Caducidad:");

        txtnombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtnombreActionPerformed(evt);
            }
        });

        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        img.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtcantidad)
                    .addComponent(txtprecio, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtunidad, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtdescripcion, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtnombre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtcodigo, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jDate1, javax.swing.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 408, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtcodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtnombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtunidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtprecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtcantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        guardar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo del Producto", "Nombre del Producto", "Categoria del Producto", "Proveedor del Producto", "Descripcion", "Unidad de medida", "Precio Unitario", "Cantidad de Ingreso", "Cantidad Disponible", "Fecha de Ingreso", "Fecha de Caducidad"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        guardar1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        guardar1.setText("Eliminar");
        guardar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar1ActionPerformed(evt);
            }
        });

        guardar2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        guardar2.setText("Buscar");
        guardar2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardar2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jScrollPane1)
                .addGap(29, 29, 29))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(370, 370, 370)
                        .addComponent(jLabel10)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(guardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(guardar2, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(214, 214, 214))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(guardar2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        // TODO add your handling code here:
        if (ValidarCamposVacio()) {
            JOptionPane.showMessageDialog(this, "Existe un campo vacio");
        } else {
            int codigo = Integer.parseInt(txtcodigo.getText());
            Productos pd = pdc.findProductos(codigo);
            if (pd == null) {
                String nombre = txtnombre.getText();
                Categorias cat = (Categorias) jComboBox1.getSelectedItem();
                Proveedores prov = (Proveedores) jComboBox2.getSelectedItem();
                String descripcion = txtdescripcion.getText();
                String unidad = txtunidad.getText();
                int precio = Integer.parseInt(txtprecio.getText());
                int cantidad = Integer.parseInt(txtcantidad.getText());

                Date fecha1 = jDate1.getDateEditor().getDate();
                java.sql.Date fec = new java.sql.Date(fecha1.getTime());

                LocalDate fechalocal = LocalDate.now();
                Date fdate = Date.from(fechalocal.atStartOfDay(ZoneId.systemDefault()).toInstant());
                java.sql.Date fechaactal = new java.sql.Date(fdate.getTime());

                Productos p = new Productos();
                p.setCodigoProducto(codigo);
                p.setNombreProducto(nombre);
                p.setCategoriasCodigo(cat);
                p.setProveedoresCodigoRut(prov);
                p.setDescripcion(descripcion);
                p.setUnidadMedida(unidad);
                p.setPrecioUnitario(precio);
                p.setCantidadIngreso(cantidad);
                p.setCantidadDisponible(cantidad);
                p.setFechaIngreso(fechaactal);
                p.setFechaCaducidad(fec);
                try {
                    pdc.create(p);
                    JOptionPane.showMessageDialog(this, "Registro guardado correctamente");
                    AgregarfilaTabla(codigo, nombre, cat, prov, descripcion, unidad, precio, cantidad, fechaactal, fec);
                    LimpiarFormulario();

                } catch (Exception ex) {
                    Logger.getLogger(FormProductos.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                JOptionPane.showMessageDialog(this, "Codigo: " + codigo + " ya existe");
            }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void txtnombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtnombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtnombreActionPerformed

    private void guardar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar1ActionPerformed
        int respuesta = JOptionPane.showConfirmDialog(this, "¬øEst√° seguro de eliminar este registro?");
        if (respuesta == JOptionPane.YES_OPTION) {
            int codigo = Integer.parseInt(txtcodigo.getText());
            try {
                // Supongamos que factura.destroy(codigo) es la forma correcta de eliminar un registro.
                pdc.destroy(codigo);
                JOptionPane.showMessageDialog(this, "Registro eliminado correctamente.");
                LimpiarFormulario(); // Limpia el formulario despu√©s de la eliminaci√≥n.
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Error al eliminar el registro: " + e.getMessage());
            }
        }
        CargarTabla();
    }//GEN-LAST:event_guardar1ActionPerformed

    private void guardar2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardar2ActionPerformed
        String buscarNombre = txtnombre.getText().toLowerCase();

        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.setRowCount(0);

        List<Productos> lp = pdc.findProductosEntities();
        boolean datosEncontrados = false;
        for (Productos productos : lp) {
            if (productos.getNombreProducto().contains(buscarNombre)) {
                // Agrega la fila a la tabla
                Object fila[] = {productos.getCodigoProducto(),productos.getNombreProducto(),productos.getCategoriasCodigo(),productos.getProveedoresCodigoRut(),productos.getDescripcion(),productos.getUnidadMedida(),productos.getPrecioUnitario(),productos.getCantidadIngreso(),productos.getCantidadDisponible(),productos.getCantidadIngreso(),productos.getFechaCaducidad()};
                modelo.addRow(fila);
                datosEncontrados = true;// Se encontraron datos
            }
        } if (!datosEncontrados) {
            // Habilita el bot√≥n para registrar
            JOptionPane.showMessageDialog(this, "No se encontr√≥ cliente con esa cedula. Registre el cliente");
            guardar2.setEnabled(true);
        } else {
            // Deshabilita el bot√≥n para registrar
            guardar2.setEnabled(false);
        }
        txtnombre.setText("");
    }//GEN-LAST:event_guardar2ActionPerformed

    public void llenarcomboboxproveedor() {
        ProveedoresJpaController cp = new ProveedoresJpaController();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(cp.findProveedoresEntities().toArray());
        jComboBox2.setModel(modelo);
    }

    public void llenarcomboboxCategoria() {
        CategoriasJpaController cp = new CategoriasJpaController();
        DefaultComboBoxModel modelo = new DefaultComboBoxModel(cp.findCategoriasEntities().toArray());
        jComboBox1.setModel(modelo);
    }

    public void AgregarfilaTabla(int codigo, String nombre, Categorias cat, Proveedores prov, String descripcion, String unidad, int precio, int cantidad, Date fechaactal, Date fec) {
        Object fila[] = {codigo, nombre, cat, prov, descripcion, unidad, precio, cantidad, cantidad, fechaactal, fec};
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        modelo.addRow(fila);
    }

    public void LimpiarFormulario() {
        txtcodigo.setText(null);
        txtnombre.setText(null);
        txtcantidad.setText(null);
        txtdescripcion.setText(null);
        txtprecio.setText(null);
        txtunidad.setText(null);
        txtcodigo.requestFocus();
    }

    public void CargarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
        List<Productos> lp = pdc.findProductosEntities();
        for (int i = 0; i < lp.size(); i++) {
            Object fila[] = {lp.get(i).getCodigoProducto(), lp.get(i).getNombreProducto(), lp.get(i).getCategoriasCodigo(), lp.get(i).getProveedoresCodigoRut(), lp.get(i).getDescripcion(), lp.get(i).getUnidadMedida(), lp.get(i).getPrecioUnitario(), lp.get(i).getCantidadIngreso(), lp.get(i).getCantidadDisponible(), lp.get(i).getFechaIngreso().toInstant(), lp.get(i).getFechaCaducidad().toInstant()};
            modelo.addRow(fila);
        }
    }

    public boolean ValidarCamposVacio() {
        if (txtcodigo.getText().equals("")) {
            txtcodigo.requestFocus();
            return true;
        }
        if (txtnombre.getText().equals("")) {
            txtnombre.requestFocus();
            return true;
        }
        return false;
    }

    private void SetImagenLabel(JLabel labelName, String root) {
        ImageIcon image = new ImageIcon(root);
        Icon icon = new ImageIcon(image.getImage().getScaledInstance(labelName.getWidth(), labelName.getHeight(), Image.SCALE_DEFAULT));
        labelName.setIcon(icon);
        this.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            FlatArcOrangeIJTheme.setup();
        } catch (Exception ex) {
            System.err.println("Failed to initialize LaF");
        }

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FormProductos dialog = new FormProductos(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton guardar;
    private javax.swing.JButton guardar1;
    private javax.swing.JButton guardar2;
    private javax.swing.JLabel img;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private com.toedter.calendar.JDateChooser jDate1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabla;
    private javax.swing.JTextField txtcantidad;
    private javax.swing.JTextField txtcodigo;
    private javax.swing.JTextField txtdescripcion;
    private javax.swing.JTextField txtnombre;
    private javax.swing.JTextField txtprecio;
    private javax.swing.JTextField txtunidad;
    // End of variables declaration//GEN-END:variables
}
